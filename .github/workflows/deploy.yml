name: Deploy Astro Landing

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build --platform linux/amd64 -t astro-landing:latest .
        
    - name: Save Docker image
      run: |
        docker save astro-landing:latest -o astro-landing.tar
        chmod 644 astro-landing.tar
        ls -la astro-landing.tar
        
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
        
    - name: Copy image to server
      run: |
        scp -o StrictHostKeyChecking=no astro-landing.tar ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/debian/
        
    - name: Deploy on server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
          
          sudo docker stop astro-landing 2>/dev/null || echo "No container to stop"
          sudo docker rm astro-landing 2>/dev/null || echo "No container to remove"
          
          sudo docker rmi astro-landing:latest 2>/dev/null || echo "No image to remove"
          
          ls -la astro-landing.tar
          
          sudo docker load -i astro-landing.tar
          
          sudo docker run -d \
            --name astro-landing \
            --restart unless-stopped \
            -p 3000:3000 \
            astro-landing:latest
          
          rm -f astro-landing.tar
          
          echo "ðŸ“Š Container status:"
          sudo docker ps | grep astro-landing
          
          echo "âœ… Deployment completed!"
        EOF